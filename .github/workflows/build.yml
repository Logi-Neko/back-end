name: Build and Deploy LogiNeko on Windows

on:
  push:
    branches:
      - cicd # Ho·∫∑c nh√°nh b·∫°n mu·ªën d√πng

jobs:
  build-and-deploy-windows:
    # üéØ Y√™u c·∫ßu job n√†y ph·∫£i ch·∫°y tr√™n runner b·∫°n v·ª´a c√†i ƒë·∫∑t
    runs-on: self-hosted

    steps:
      # üß© 1. L·∫•y code t·ª´ branch
      - name: Checkout code
        uses: actions/checkout@v4

      # ‚òï 2. C√†i Java 21 (Temurin)
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # ‚öôÔ∏è 3. Build project b·∫±ng Maven
      - name: Build with Maven
        # Ch·∫°y l·ªánh Maven b·∫±ng PowerShell
        run: mvn clean package -DskipTests
        shell: pwsh

      # üîê 4. T·∫°o file .env t·ª´ secrets GitHub (c√∫ ph√°p cho PowerShell)
      - name: Create .env file
        shell: pwsh
        run: |
          @"
          KEYCLOAK_CLIENT_SECRET=${{ secrets.KEYCLOAK_CLIENT_SECRET }}
          KEYCLOAK_URL=${{ secrets.KEYCLOAK_URL }}
          KEYCLOAK_URL_WEB=${{ secrets.KEYCLOAK_URL_WEB }}
          KEYCLOAK_CLIENT_ID=${{ secrets.KEYCLOAK_CLIENT_ID }}
          KEYCLOAK_REALM=${{ secrets.KEYCLOAK_REALM }}
          kafka_server=${{ secrets.KAFKA_SERVER }}
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          REDIRECT_URI=${{ secrets.REDIRECT_URI }}
          REDIRECT_URI_WEB=${{ secrets.REDIRECT_URI_WEB }}
          POSTGRES_PASSWORD_KEYCLOAK=${{ secrets.POSTGRES_PASSWORD_KEYCLOAK }}
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          PAYOS_CLIENT_ID=${{ secrets.PAYOS_CLIENT_ID }}
          PAYOS_API_KEY=${{ secrets.PAYOS_API_KEY }}
          PAYOS_CHECKSUM_KEY=${{ secrets.PAYOS_CHECKSUM_KEY }}
          PAYOS_BASE_URL=${{ secrets.PAYOS_BASE_URL }}
          PAYOS_SUCCESS_PAGE=${{ secrets.PAYOS_SUCCESS_PAGE }}
          PAYOS_FAILURE_PAGE=${{ secrets.PAYOS_FAILURE_PAGE }}
          "@ | Out-File -FilePath .env -Encoding utf8

      # üöÄ 5. Deploy tr·ª±c ti·∫øp b·∫±ng Docker Compose
      - name: Deploy with Docker Compose
        shell: pwsh
        run: |
          # D·ª´ng l·∫°i n·∫øu c√≥ l·ªói x·∫£y ra
          $ErrorActionPreference = "Stop"

          echo "üöÄ Starting deployment directly on Windows host..."
          
          # Di chuy·ªÉn v√†o th∆∞ m·ª•c ch·ª©a code m√† runner ƒë√£ checkout
          # ƒê√¢y l√† n∆°i ch·ª©a file .jar, .env v√† docker-compose.yml c·ªßa b·∫°n
          cd "${{ github.workspace }}"
          
          echo "üìÅ Current directory:"
          ls
          
          # ƒê·∫£m b·∫£o Docker Desktop ƒëang ch·∫°y (b∆∞·ªõc n√†y b·∫°n c·∫ßn t·ª± ƒë·∫£m b·∫£o)
          echo "üõë Stopping existing containers..."
          docker compose down --timeout 30
          
          echo "üßπ Cleaning up old images..."
          docker system prune -f
          
          echo "üèóÔ∏è Building and starting new containers..."
          docker compose up -d --build --force-recreate
          
          echo "‚è≥ Waiting for containers to stabilize..."
          Start-Sleep -Seconds 30
          
          echo "üìä Final container status:"
          docker compose ps
          
          echo "‚úÖ Deployment on Windows completed successfully!"