spring:
  application:
    name: LogiNeko

  messages:
    basename: messages
    encoding: UTF-8

  datasource:
    url: jdbc:postgresql://localhost:5432/logineko_db
    username: postgres
    password: 12345
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
      format_sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/${keycloak.realm}

  kafka:
    bootstrap-servers: localhost:29092
    producer:
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

    consumer:
        group-id: quiz-consumer-group
        auto-offset-reset: earliest
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
        properties:
          spring.json.trusted.packages: "exe2.learningapp.logineko.quizziz.dto"
          spring.json.value.default.type: java.lang.Object

    listener:
        missing-topics-fatal: false


server:
  port: 8081

idp:
  url: ${KEYCLOAK_URL_WEB}

keycloak:
  auth-server-url: ${KEYCLOAK_URL}
  auth-server: ${KEYCLOAK_URL_WEB}
  realm: ${KEYCLOAK_REALM}
  resource: ${KEYCLOAK_CLIENT_ID}
  credentials:
    secret: ${KEYCLOAK_CLIENT_SECRET}

google:
  oauth:
    client-id: ${GOOGLE_CLIENT_ID}
    client-secret: ${GOOGLE_CLIENT_SECRET}

app:
  jwt-secret: ${JWT_SECRET}
  redirect-uri: ${REDIRECT_URI}
  redirect-uri-web: ${REDIRECT_URI_WEB}

payos:
  client-id: ${PAYOS_CLIENT_ID}
  api-key: ${PAYOS_API_KEY}
  checksum-key: ${PAYOS_CHECKSUM_KEY}
  base-url: ${PAYOS_BASE_URL}




