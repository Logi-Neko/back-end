version: '3.8'

services:

  postgres:
    image: postgres:15
    container_name: logineko_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - logineko_network
    restart: unless-stopped

  keycloak:
    image: keycloak/keycloak:25.0.6
    container_name: logineko_keycloak
    # Use a custom entrypoint to build first, then start
    depends_on:
      - postgres
    entrypoint: [ "/bin/bash", "-c" ]
    command:
      - start --optimized

    environment:
      # Admin account
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin

      # Database config
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres # Must match the password in

      # Hostname config
      KC_HOSTNAME: auth.logineko.edu.vn # Your public domain
      KC_PROXY: edge
      KC_HOSTNAME_STRICT_HTTPS: true
      KC_HTTP_ENABLED: true
#      KC_PROXY_HEADERS: xforwarded
#      KC_PROXY: edge

      # Connection pool settings
      KC_DB_POOL_INITIAL_SIZE: 10
      KC_DB_POOL_MIN_SIZE: 5
      KC_DB_POOL_MAX_SIZE: 20
      KC_DB_POOL_MAX_LIFETIME: 600000

      # Performance optimizations
      KC_CACHE: ispn
      KC_CACHE_STACK: tcp

      # Session and token optimizations
      KC_SPI_EVENTS_LISTENER_JBOSS_LOGGING_SUCCESS_LEVEL: info
      KC_SPI_EVENTS_LISTENER_JBOSS_LOGGING_ERROR_LEVEL: warn

#    ports:
#      - "8080:8080"
    restart: unless-stopped

    networks:
      - logineko_network
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: logineko_zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: unless-stopped

    networks:
      - logineko_network
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: logineko_kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: unless-stopped

    networks:
      - logineko_network

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: logineko_cloudflared
    restart: unless-stopped
    command: tunnel --no-autoupdate run --token eyJhIjoiNTk2Y2Q4ZjM1M2ZhMmE3MDgwOTgxMzg4NzU3NWNmYWQiLCJ0IjoiNDRiOTM3NDUtYTBjNi00MTIyLWE3ZmMtZGQ2MjMzMTE5ZGYwIiwicyI6Iit6Z1NJSEEvcFhZUEtjNVc2OVlWVWgrOUdGMyt3TFdrS2dCdndEdjZoUXM9In0=
    networks:
      - logineko_network

  logineko-be:
    image: alfred0324/logineko-be:latest
#    build: .
    container_name: logineko_be
    depends_on:
      - keycloak
      - kafka
    ports:
      - "8081:8081"
    env_file:
      - .env
    restart: always

    networks:
      - logineko_network
volumes:
  postgres-data:

networks:
  logineko_network:
    driver: bridge